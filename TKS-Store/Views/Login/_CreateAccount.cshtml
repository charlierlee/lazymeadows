@model TKS.Models.CreateUserViewModel

@using (Html.BeginForm("CreateAccount", "Login")) {
    <h2>Create an Account</h2>
    <div style="padding:10px 20px" class="ym-columnar">
        <div class="ym-fbox-text">
            @Html.LabelFor(model => model.NewUserName, htmlAttributes: new { @class = "ym-required" })
            @Html.EditorFor(model => model.NewUserName)
            @Html.ValidationMessageFor(model => model.NewUserName, "", new { @class = "ym-error" })
        </div>
        <div class="ym-fbox-text">
            @Html.LabelFor(model => model.NewPassword, htmlAttributes: new { @class = "ym-required" })
            @Html.PasswordFor(model => model.NewPassword)
            @Html.ValidationMessageFor(model => model.NewPassword, "", new { @class = "ym-error" })
        </div>
        <div class="ym-fbox-text">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "ym-required" })
            @Html.EditorFor(model => model.Email)
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "ym-error" })
        </div>
        <div style="text-align:center;color:#f00;margin: 0 0 5px">
            @Html.DisplayFor(model => model.ErrorMessage)
        </div>
        <div class="ym-fbox-button">
            <input type="submit" class="ym-button ym-small" value="Create Account" />
            @Html.HiddenFor(model => model.ReturnURL)
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.AntiForgeryToken()
        </div>
    </div>
}
